<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">





<!--IOC的作用：降低程序间的耦合（依赖关系）
依赖关系的关系：
    以后都交给spring来维护
    在当前类需要用到其他类的对象，由spring为我们提供，我们只需要子啊配置文件中说明
    依赖关系的维护：就称为依赖注入
    依赖注入：
    能注入的数据: 有三类
    第一类：使用构造函数提供
    第二类：使用set方法提供
    第三类：使用注解提供
-->
<!--构造函数注入：
        使用的标签：constructor-arg
        标签中出现的位置：bean标签的聂内容
        标签中的属性：
            type：用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或者某些参数的类型
            index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置是从0开始
            name：用于指定给构造函数中指定名称的参数赋值（常用）
            +++++++++++++++++++++以上三个参数用于指定构造函数中的那个参数赋值++++++++++++++++
            value:用于提供基本类型和String类型的数据
            ref：用于指定其他额bean类型数据。他指的就是在spring的IOC核心容器中出现过的bean对象
                这个bean对象的特点：
                优势：在获取bean对象时，注入数据时必须操作，否则对象无法创建成功。
                劣势：改变了bean对象的实例化方式，是我们创建对象时，如果用不到这些数据，也必须提供

-->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImp">
       <constructor-arg name="userName" value="test1"></constructor-arg>
       <constructor-arg name="age" value="18"></constructor-arg>
       <constructor-arg name="birthday" ref="now"></constructor-arg>

    </bean>
    <!--设置一个日期对象-->
    <bean id="now" class="java.util.Date"></bean>

    <!--set方法注入（这个时更常用的方法）
        涉及的标签：property
        出现的位置：bean标签的内部
        标签的属性：
                name：用于指定注入时所调用的set方法名称
                value：用于提供基本类型和String类型的数据
                ref：用于提供其他的bean类型数据。他指的就是在spring的IOC核心容器中出现过的bean对象
            优势：创建对象时没有明确的限制，可以直接使用默认构造函数
            弊端：如果有某个成员必须有值，则获取对象时有可能set方法没有执行
    -->
    <bean id="accountService2" class="com.itheima.service.impl.AccountServiceImp2">
        <property name="userName" value="test2"></property>
        <property name="age" value="19"></property>
        <property name="birthday" ref="now"></property>

    </bean>

    <!--复杂类型的注入/集合类型的注入
    用于给List结构集合注入的标签
        List ，set，array
    用于个map结构集合注入的标签
    map，props
    结构相同，标签可以互换
    -->
    <bean id="accountService3" class="com.itheima.service.impl.AccountServiceImp3">
        <property name="myStrs">


            <set>
                <value>set1</value>
                <value>set2</value>
                <value>set3</value>
            </set>
        </property>

        <property name="myList">
            <array>
                <value>Array1</value>
                <value>Array2</value>
                <value>Array3</value>
            </array>
        </property>

        <property name="mySet">
            <list>
                <value>list1</value>
                <value>list2</value>
                <value>list3</value>
            </list>

        </property>
        <property name="myMap">
            <props>
                <prop key="userName">zhanglin</prop>
                <prop key="age">32</prop>
            </props>

        </property>
        <property name="myProps">
            <map>
                <entry key="key1" value="value1"></entry>
                <entry key="key2" value="value2"></entry>
                <entry key="key3" value="value3"></entry>
            </map>
        </property>

    </bean>


</beans>