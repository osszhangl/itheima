一、spring基于注解的CRUD，纯注解的方式，并
没有给我们的开发代理多大的遍历，有一些还是比较麻烦，
综合纯注解和纯xml，一般采用xml和注解并用的方法。对于需要引用jar包中的类，采用xml的方法更直观一些，自己写的类可以使用注解的方式

二、配置类的使用
 Configuration:作用：指定当前类是一个配置类
               细节：当配置类 作为AnnotationConfigApplicationContext对象创建的参数时，该注解可以不写
 ComponentScan：作用L:用于通过注解指定spring在创建时要扫描的包
                 属性： value：他和basePackages的作用时一样的，都是用于指定容器创建时要扫描的包
                                 我们 使用此注解就等同于xml中配置l：
                                <context:component-scan base-package="com.itheima"></context:component-scan>
 Bean 注解的作用：用于把当前方法的返回值作为bean对象存入spring的ioc容器中
             属性：name：用于指定bean的id，当不写时，默认值时当前方法的名称
             细节：当我们使用注解配置方法时，如果方法由参数，spring框架会去容器中查找有没有可用的bean对象。
                  查找方式和Autowired注解的作用是一样的

 Import  作用：用于导入其他的配置类
          属性： value ：用于指定其他配置类的字节码。
                         当我们使用Import的注解之后，有Import注解的类就是父配置类，而导入的都是子配置类

 PropertySource : 作用：用于指定properties文件的位置
                 属性：value 指定文件的名称和路径。关键字：classpath，表示类路径下


三、spring整合junit配置
1、导入soring整合junit的jar坐标
2、使用jubit提供的一个注解把原来有的main方法替换掉，替换成spring提供的
3、告知spring的运行器，spring和ioc的创建是基于xml还是注解的，并且说明位置
 @ContextConfiguration
    locations：指定xml的文件位置，加上classpath关键字，表示在类路径下
    classes：指定注解类所在地位置
    当我们使用的spring 5.x版本的时候，要求junit的jar必须是4.12及以上版本









